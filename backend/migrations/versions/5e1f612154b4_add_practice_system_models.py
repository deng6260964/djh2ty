"""Add practice system models

Revision ID: 5e1f612154b4
Revises: 948453d4c6c9
Create Date: 2025-08-17 20:15:03.954560

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5e1f612154b4'
down_revision = '948453d4c6c9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('practices',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', name='practice_status'), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('practice_questions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('practice_id', sa.String(length=36), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['practice_id'], ['practices.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('practice_id', 'question_id', name='uq_practice_question')
    )
    with op.batch_alter_table('practice_questions', schema=None) as batch_op:
        batch_op.create_index('idx_practice_order', ['practice_id', 'order_index'], unique=False)

    op.create_table('practice_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('practice_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('in_progress', 'paused', 'completed', 'abandoned', name='session_status'), nullable=False),
    sa.Column('current_question_index', sa.Integer(), nullable=False),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('answered_questions', sa.Integer(), nullable=False),
    sa.Column('correct_answers', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('total_time_spent', sa.Integer(), nullable=True),
    sa.Column('session_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['practice_id'], ['practices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('practice_sessions', schema=None) as batch_op:
        batch_op.create_index('idx_session_activity', ['last_activity_at'], unique=False)
        batch_op.create_index('idx_user_practice_status', ['user_id', 'practice_id', 'status'], unique=False)

    op.create_table('practice_answers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('practice_session_id', sa.String(length=36), nullable=False),
    sa.Column('practice_question_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('answer_content', sa.Text(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('max_score', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('answer_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['practice_question_id'], ['practice_questions.id'], ),
    sa.ForeignKeyConstraint(['practice_session_id'], ['practice_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('practice_session_id', 'practice_question_id', name='uq_session_question_answer')
    )
    with op.batch_alter_table('practice_answers', schema=None) as batch_op:
        batch_op.create_index('idx_session_answers', ['practice_session_id'], unique=False)
        batch_op.create_index('idx_user_answers', ['user_id', 'submitted_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('practice_answers', schema=None) as batch_op:
        batch_op.drop_index('idx_user_answers')
        batch_op.drop_index('idx_session_answers')

    op.drop_table('practice_answers')
    with op.batch_alter_table('practice_sessions', schema=None) as batch_op:
        batch_op.drop_index('idx_user_practice_status')
        batch_op.drop_index('idx_session_activity')

    op.drop_table('practice_sessions')
    with op.batch_alter_table('practice_questions', schema=None) as batch_op:
        batch_op.drop_index('idx_practice_order')

    op.drop_table('practice_questions')
    op.drop_table('practices')
    # ### end Alembic commands ###
